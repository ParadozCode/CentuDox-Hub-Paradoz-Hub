

local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
local function dec(data)
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do
            r = r .. (f % 2^i - f % 2^(i-1) > 0 and '1' or '0')
        end
        return r
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if #x ~= 8 then return '' end
        local c = 0
        for i=1,8 do
            c = c + (x:sub(i,i) == '1' and 2^(8 - i) or 0)
        end
        return string.char(c)
    end))
end

local source = dec('CmxvY2FsIGI9J0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nCmxvY2FsIGZ1bmN0aW9uIGRlYyhkYXRhKQogICAgZGF0YSA9IHN0cmluZy5nc3ViKGRhdGEsICdbXicuLmIuLic9XScsICcnKQogICAgcmV0dXJuIChkYXRhOmdzdWIoJy4nLCBmdW5jdGlvbih4KQogICAgICAgIGlmICh4ID09ICc9JykgdGhlbiByZXR1cm4gJycgZW5kCiAgICAgICAgbG9jYWwgcixmPScnLChiOmZpbmQoeCktMSkKICAgICAgICBmb3IgaT02LDEsLTEgZG8KICAgICAgICAgICAgciA9IHIgLi4gKGYgJSAyXmkgLSBmICUgMl4oaS0xKSA+IDAgYW5kICcxJyBvciAnMCcpCiAgICAgICAgZW5kCiAgICAgICAgcmV0dXJuIHIKICAgIGVuZCk6Z3N1YignJWQlZCVkPyVkPyVkPyVkPyVkPyVkPycsIGZ1bmN0aW9uKHgpCiAgICAgICAgaWYgI3ggfj0gOCB0aGVuIHJldHVybiAnJyBlbmQKICAgICAgICBsb2NhbCBjID0gMAogICAgICAgIGZvciBpPTEsOCBkbwogICAgICAgICAgICBjID0gYyArICh4OnN1YihpLGkpID09ICcxJyBhbmQgMl4oOCAtIGkpIG9yIDApCiAgICAgICAgZW5kCiAgICAgICAgcmV0dXJuIHN0cmluZy5jaGFyKGMpCiAgICBlbmQpKQplbmQKCmxvY2FsIHNvdXJjZSA9IGRlYygnQ214dlkyRnNJR0k5SjBGQ1EwUkZSa2RJU1VwTFRFMU9UMUJSVWxOVVZWWlhXRmxhWVdKalpHVm1aMmhwYW10c2JXNXZjSEZ5YzNSMWRuZDRlWG93TVRJek5EVTJOemc1S3k4bkNteHZZMkZzSUdaMWJtTjBhVzl1SUdSbFl5aGtZWFJoS1FvZ0lDQWdaR0YwWVNBOUlITjBjbWx1Wnk1bmMzVmlLR1JoZEdFc0lDZGJYaWN1TG1JdUxpYzlYU2NzSUNjbktRb2dJQ0FnY21WMGRYSnVJQ2hrWVhSaE9tZHpkV0lvSnk0bkxDQm1kVzVqZEdsdmJpaDRLUW9nSUNBZ0lDQWdJR2xtSUNoNElEMDlJQ2M5SnlrZ2RHaGxiaUJ5WlhSMWNtNGdKeWNnWlc1a0NpQWdJQ0FnSUNBZ2JHOWpZV3dnY2l4bVBTY25MQ2hpT21acGJtUW9lQ2t0TVNrS0lDQWdJQ0FnSUNCbWIzSWdhVDAyTERFc0xURWdaRzhLSUNBZ0lDQWdJQ0FnSUNBZ2NpQTlJSElnTGk0Z0tHWWdKU0F5WG1rZ0xTQm1JQ1VnTWw0b2FTMHhLU0ErSURBZ1lXNWtJQ2N4SnlCdmNpQW5NQ2NwQ2lBZ0lDQWdJQ0FnWlc1a0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJS0lDQWdJR1Z1WkNrNlozTjFZaWduSldRbFpDVmtQeVZrUHlWa1B5VmtQeVZrUHlWa1B5Y3NJR1oxYm1OMGFXOXVLSGdwQ2lBZ0lDQWdJQ0FnYVdZZ0kzZ2dmajBnT0NCMGFHVnVJSEpsZEhWeWJpQW5KeUJsYm1RS0lDQWdJQ0FnSUNCc2IyTmhiQ0JqSUQwZ01Bb2dJQ0FnSUNBZ0lHWnZjaUJwUFRFc09DQmtid29nSUNBZ0lDQWdJQ0FnSUNCaklEMGdZeUFySUNoNE9uTjFZaWhwTEdrcElEMDlJQ2N4SnlCaGJtUWdNbDRvT0NBdElHa3BJRzl5SURBcENpQWdJQ0FnSUNBZ1pXNWtDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjBjbWx1Wnk1amFHRnlLR01wQ2lBZ0lDQmxibVFwS1FwbGJtUUtDbXh2WTJGc0lITnZkWEpqWlNBOUlHUmxZeWduVEZNd1oxVXlWbmxrYld4cVdsaE5TMkpIT1dwWlYzZG5WVWQ0YUdWWFZubGplVUU1U1Vka2FHSlhWVFpTTWxZd1ZUSldlV1J0YkdwYVUyZHBWVWQ0YUdWWFZubGplVWx3UTIxNGRsa3lSbk5KUms0d1dWaEtNRnBZU2toa1YydG5VRk5DYmxsWE1XeFBhMlJzWkVaT2JHTnVXbkJaTWxWdlNXeE9NRmxZU2pCYVdFcElaRmRyYVV0UmNITmlNazVvWWtOQ1ZtTXlWbmxUVnpWM1pGaFNWRnBZU2pKaFYwNXNTVVF3WjFveVJuUmFWSEJJV2xoU1ZGcFlTakpoVjA1c1MwTktWbU15Vm5sVFZ6VjNaRmhTVkZwWVNqSmhWMDVzU1dsclMySkhPV3BaVjNkblZFYzVhbGxYZUZGaVIwWTFXbGhKWjFCVFFsRmlSMFkxV2xoS2VreHJlSFpaTWtaelZVZDRhR1ZYVm5sRFoyOTBURk5DU1dGWVVtbGlNMmRuVlRKV01HUkhiSFZhTTAxTFlrYzVhbGxYZDJkaFIyd3dXVzA1TkZKWE5XaFpiWGhzV2tOQk9VbEhXbWhpU0U1c1EyMTRkbGt5Um5OSlIyaHdaRWRLZG1WR1RuQmxiVlZuVUZOQ1YxcFhUakJpTTBsNlRHMDFiR1I1WnpGTVEwRXhURU5CTVV0UmNITmlNazVvWWtOQ2RtTnRiRzVoVnpWb1lrWk9jR1Z0Vm5wSlJEQm5aVE13UzBOcE1IUkpSV1JXVTFGd2MySXlUbWhpUTBKNldUTktiRnBYTlVoa1YydG5VRk5DU21KdVRqQlpWelZxV2xNMWRWcFlZMjlKYkU1cVkyMVdiR0pyWkRGaFUwbHpTVVY0ZGxreVJuTlZSM2hvWlZkV2VVOXNaR2hoV0ZKSFlqTktSR0ZIYkhOYVEyZHBWVWQ0YUdWWFZubFNNMVp3U1dscmNFTnVUbXBqYlZac1ltdGtNV0ZUTlU5WlZ6RnNTVVF3WjBscmFIQmtSMHAyWlVVeGJHSnVWbFpUVTBsTFl6Sk9lVnBYVm5WU00xWndUR3hLYkdNeVZqQlVNalZVWTBkR00ySnBRVGxKUjFwb1lraE9iRU5uYjNSTVUwSk9XbGMxTVVsRlNqRmtTRkoyWW1kd2MySXlUbWhpUTBKMFdsYzFNVkZ1VmpCa1J6bDFTVVF3WjFOWE5YcGtSMFoxV1RKVmRXSnRWak5MUTBwVldsaG9NRkZ1VmpCa1J6bDFTV2xyUzJKWFZuVmtWVW94WkVoU2RtSnBOVlJoV0hCc1NVUXdaMVpWVW5CaVZFbDFZbTFXTTB0RVFYTkpSRVYzVFVOM1owMURkMmRPUkVGd1EyMHhiR0p1VmtOa1dGSXdZakkwZFZWSE9YcGhXRkp3WWpJMFoxQlRRbFpTUjJ4MFRXazFkVnBZWTI5TlEzZG5UVlJKZDB4RFFYZE1RMEY0VFVOclMySlhWblZrVlVveFpFaFNkbUpwTlVOWlYwNXlXak5LZG1SWE5XdFJNamx6WWpOSmVrbEVNR2RSTWpsellqTkpla3h0V25saU1qRlRVakJKYjAxRGQyZE5RM2RuVFVOclMySlhWblZrVlVveFpFaFNkbUpwTlZWYVdHZ3dVVEk1YzJJelNYcEpSREJuVVRJNWMySXpTWHBNYlZwNVlqSXhVMUl3U1c5TlEzZG5UV3BWTVV4RFFYZExVWEIwV2xjMU1WRnVWakJrUnpsMVRHeFNiR1ZJVVdkUVUwRnBVMGRzTUZsdE9UUkpSVEZzWW01VmFVTnRNV3hpYmxaRFpGaFNNR0l5TkhWU2JUbDFaRU5CT1VsRlZuVmtWekIxVW0wNWRXUkROVWhpTTFKdldWY3hRMkl5ZUd0RGJURnNZbTVXUTJSWVVqQmlNalIxVmtkV05HUkdUbXBaVjNoc1drTkJPVWxJVW5sa1YxVkxZbGRXZFdSVlNqRmtTRkoyWW1rMVVWbFlTbXhpYmxGblVGTkNlbGt6U214YVZ6VklaRmRyUzJKWFZuVmtWVW94WkVoU2RtSnBOVU5pTTBwcldsaEtWR0ZZY0d4VlIydzBXbGQzWjFCVFFYZERiVEZzWW01V1EyUllVakJpTWpSMVVWaFdNR0l3U2pGa1NGSjJZbXRPZG1KSE9YbEpSREJuV20xR2MyTXlWVXREYlhoMldUSkdjMGxITVd4aWJsWkVZak5LZFZwWVNXZFFVMEpLWW01T01GbFhOV3BhVXpWMVdsaGpiMGxzVmtwUk1qbDVZbTFXZVVscGQyZGlWMVoxWkZWS01XUklVblppYVd0TFlsZFdkV1JWVG5aamJUVnNZMmsxUkdJelNuVmFXRXBUV1ZkU2NHUllUV2RRVTBKV1VrZHNkRXh0Tld4a2VXZDNURU5CZUUxcGEwdERiVEZzWW01V1EyUllVakJpTWpSMVVWZE9NR0ZZV214SlJEQm5aRWhLTVZwUmNIUmFWelV4VVc1V01HUkhPWFZNYTFKNVdWZGtibGxYU25OYVUwRTVTVWhTZVdSWFZVdERhVEIwU1VVeGJHSnVWV2RSYlRrMFEyMTRkbGt5Um5OSlJ6RnNZbTVXUTJJeloyZFFVMEpLWW01T01GbFhOV3BhVXpWMVdsaGpiMGxyV25sWlZ6RnNTV2xyUzJKWFZuVmtWVXAyWlVNMVZHRlljR3hKUkRCblZsVlNjR0pVU1hWaWJWWXpTMFJCYzBsRVJUUk5RM2RuVFVOM1owMVVTWGRMVVhCMFdsYzFNVkZ0T1RSTWJFSjJZekpzTUdGWE9YVkpSREJuVmxWU2NHSlVTWFZpYlZZelMwUkJjMGxFUlhsTlEzZG5UVU4zWjA1cVFYQkRiVEZzWW01V1EySXpaM1ZSYlVacVlUSmtlV0l6Vm5WYVJVNTJZa2M1ZVUxNVFUbEpSVTUyWWtjNWVVMTVOVzFqYlRsMFZXdGtRMHRFUVhOSlJFRnpTVVJCY0VOdE1XeGlibFpEWWpObmRWWnRiSHBoVjBweldsTkJPVWxIV21oaVNFNXNRMjB4YkdKdVZrTmlNMmQxVlVkR2VWcFhOVEJKUkRCbll6Sk9lVnBYVm5WU00xWndRMmR3YzJJeVRtaGlRMEpwWWpOb1JHSXpTblZhV0VsblVGTkNTbUp1VGpCWlZ6VnFXbE0xZFZwWVkyOUpiRlpLVVRJNWVXSnRWbmxKYVhkbllsZFdkV1JWU25abFEydExXVzA1TkZFeU9YbGliVlo1VEd0T2RtTnROV3hqYkVwb1drZHNNV041UVRsSlJsWkZZVmN3ZFdKdFZqTkxSRUZ6U1VSRmVVdFJiMHRNVXpCblZrYzVibG95ZUd4SlJVb3haRWhTZG1KbmNITmlNazVvWWtOQ01HSXlaRzVpUjFaRFpGaFNNR0l5TkdkUVUwSktZbTVPTUZsWE5XcGFVelYxV2xoamIwbHNVbXhsU0ZKRFpGaFNNR0l5TkdsTFVYQXdZakprYm1KSFZrTmtXRkl3WWpJMGRWVXliRFphVTBFNVNVWldSV0ZYTUhsTWJUVnNaSGxuZDB4RFFYaE9ha0Z6U1VSQmMwbEVVWGRMVVhBd1lqSmtibUpIVmtOa1dGSXdZakkwZFZWSE9YcGhXRkp3WWpJMFoxQlRRbFpTUjJ4MFRXazFkVnBZWTI5TlEzZG5UVlJCYzBsRVFYTkpSRVYzUzFGd01HSXlaRzVpUjFaRFpGaFNNR0l5TkhWUmJVWnFZVEprZVdJelZuVmFSVTUyWWtjNWVVMTVRVGxKUlU1MllrYzVlVTE1TlcxamJUbDBWV3RrUTB0RVFYTkpSRUZ6U1VSQmNFTnVVblphTW1SeldsVktNV1JJVW5aaWFUVlZXbGhvTUZFeU9YTmlNMGw2U1VRd1oxRXlPWE5pTTBsNlRHMWFlV0l5TVZOU01FbHZUV3BWTVV4RFFYZE1RMEYzUzFOQmRFeFRRbE5hVjFGbllWYzFjR1JIYkdoaVIzZzFRMjVTZGxveVpITmFWVW94WkVoU2RtSnBOVlZhV0dnd1NVUXdaMGxyYUhCa1IwcDJaVU5DVUZKcldXbERibEoyV2pKa2MxcFZTakZrU0ZKMlltazFSMkl5TlRCSlJEQm5VbGMxTVdKVE5VZGlNalV3VEd0a2RtUkhhR2hpVlVwMllrZFJTMlJIT1c1YU1uaHNVVzVXTUdSSE9YVk1iRkpzWlVoU1ZGa3lSbk5hVjFGblVGTkNNR051Vm14RGJsSjJXakprYzFwVlNqRmtTRkoyWW1rMVVWbFlTbXhpYmxGblVGTkNkRnBYTlRGUmJUazBRMjVTZGxveVpITmFWVW94WkVoU2RtSnBOVU5pTTBwcldsaEtWR0ZZY0d4VlIydzBXbGQzWjFCVFFYZERibEoyV2pKa2MxcFZTakZrU0ZKMlltazFRbVJZVW5aUmJsWXdaRWM1ZFZFeU9YTmlNMGxuVUZOQ2JWbFhlSHBhVVc5TFlrYzVhbGxYZDJka1J6bHVXako0YkZFeU9YbGliVlo1U1VRd1oxTlhOWHBrUjBaMVdUSlZkV0p0VmpOTFEwcFdVMVZPZG1OdE5XeGphVWx6U1VoU2Rsb3laSE5hVlVveFpFaFNkbUpwYTB0a1J6bHVXako0YkZFeU9YbGliVlo1VEd0T2RtTnROV3hqYkVwb1drZHNNV041UVRsSlJsWkZZVmN3ZFdKdFZqTkxSRUZ6U1VSRmQwdFJiMHRNVXpCblZtMUdjMlJYVldkVFZ6VjNaRmhSUzJKSE9XcFpWM2RuWkcxR2MyUlhWa05pTTJkblVGTkNTbUp1VGpCWlZ6VnFXbE0xZFZwWVkyOUpiRkpzWlVoU1EySXpaMmxMVVhBeVdWZDRNVnBWU25abFF6VlVZVmh3YkVsRU1HZFdWVkp3WWxSSmRXSnRWak5MUkVGelNVUkZNazFEZDJkTlEzZG5Ua1JCY0VOdVdtaGlTRlpzVVcwNU5FeHNRblpqTW13d1lWYzVkVWxFTUdkV1ZWSndZbFJKZFdKdFZqTkxSRUZ6U1VSRmQweERRWGRNUTBFeVRVTnJTMlJ0Um5Oa1YxWkRZak5uZFZGdFJtcGhNbVI1WWpOV2RWcEZUblppUnpsNVRYbEJPVWxGVG5aaVJ6bDVUWGsxYldOdE9YUlZhMlJEUzBSTmQweERRWHBOUTNkblRYcEJjRU51V21oaVNGWnNVVzA1TkV4c1VteGxTRkpFWWpKNGRtTnFUV2RRVTBKRVlqSjRkbU5xVFhWYWJrcDJZbFpLU0ZGcFozbE9WRlZ6U1VSSk1VNVRkMmROYWxVeFMxRndNbGxYZURGYVZVcDJaVU0xVVdKSFJtcGFWMmgyWWtkU2JHTnNVbXhsU0ZGblVGTkJhVkpYTlRCYVdFbG5ZekpzTmxwVFNVdGtiVVp6WkZkV1EySXpaM1ZTYlRsMVpFTkJPVWxGVm5Wa1Z6QjFVbTA1ZFdSRE5VaGlNMUp2V1Zjd1MyUnRSbk5rVjFaRFlqTm5kVlpIVmpSa1JrNXFXVmQ0YkZwRFFUbEpTRko1WkZkVlMyUnRSbk5rVjFaRFlqTm5kVlpIVmpSa1EwRTVTVU5KYVVOdVdtaGlTRlpzVVcwNU5FeHNRbWhqYlZaMVpFTkJPVWxITVd4aWJsWkRZak5uUzJSdFJuTmtWMVpEWWpObmRWRnRPWGxhUjFaNVZUSnNObHBXUW5CbFIxWnpTVVF3WjAxQmIwdGlSemxxV1ZkM1oyUnRSbk5rVjFaRVlqTktkVnBZU1dkUVUwSktZbTVPTUZsWE5XcGFVelYxV2xoamIwbHNWa3BSTWpsNVltMVdlVWxwZDJka2JVWnpaRmRXUTJJelozQkRibHBvWWtoV2JGRXlPWGxpYlZaNVRHdE9kbU50Tld4amJFcG9Xa2RzTVdONVFUbEpSbFpGWVZjd2RXSnRWak5MUkVGelNVUkZkMHRSYjB0TVV6Qm5Wa2M1YmxveWVHeEpSekZzWW01VloyUnRiSHBoVjBwd1lrZHNNR1ZSY0hSYVZ6VXhVVzVXTUdSSE9YVk1hekYyWkZoT2JGRnVWakJrUnpsMVRWVk9jMkZYVG5KUGEwNTJZbTAxYkZrelVXOWFibFoxV1ROU2NHSXlORzlMVVc5S1lsZFdkV1JWU25abFF6VlhZVmhPY0ZsdGVHeEpSREJuWW0wNU1FbEhNV3hpYmxaRFlqTm5kVlp0YkhwaFYwcHpXbEZ3YkdKdFVYQkRaMjkwVEZOQ1ZtTkhVbWhrUjFWbllVZHNNRmx0T1RSSlNFNXdaVzFXZWtOdGVIWlpNa1p6U1VkYU1XSnRUakJoVnpsMVNVZEdkMk5IZURWVFIyd3dXVzA1TkV0RGEwdERWMXAyWTJsQ1preERRbmRpU0VsbllWYzBaMk5IUm5CamJrMXZWVWQ0YUdWWFZubGplbkJJV2xoU1VXSkhSalZhV0VwNlMwTnJjRWxIVW5aRFoydEtZVmRaWjJOSGVIbEpTRFE1U1VWNGRsa3lSbk5WUjNob1pWZFdlVWxIUm5WYVEwSjNZa2hKZFZFeWFHaGpiVVpxWkVkV2VVbEhSblZhUTBKM1lraEpkVkV5YUdoamJVWnFaRWRXZVU5clduQmliVkpIWVZoS2VtUkZUbTloVjNoclMwTktTV1JYTVdoaWJUbHdXa1pLZG1JelVsRlpXRW93U1dscloyUkhhR3hpWjI5S1ExRnNjMkl5VG1oaVEwSnZZMjVCWjFCVFFuZGlTRWwxVVRKb2FHTnRSbXBrUjFaNVRHdG9NV0pYUm5WaU1teHJWVzA1ZG1SR1FtaGpibEZMUTFGclNtRlhXV2RpYlRrd1NVYzVlV0ZYWkhCaWJVWnpWVEpzTmxwWVRtSmpSM2g1V0ZOQ01HRkhWblZEWjJ0S1ExRnNkbU50Ykc1aFZ6Vm9Za1pPY0dWdFZucFhNMEp6WTJ3d1oxQlRRbTlqYmtGMVZUSnNObHBSYjBwRFVXeHNZbTFSUzBOUmEwcGhTRXAzVEd4T2NHVnRWV2RRVTBKdllWaFNhV0l6YUZSaFdIQnNRMmRyU2tOWGFIbGpRelZWWTIxR2RXTXpRbWhqYlZaMVdUTnJaMUJUUVhkTWFtTkxRMUZyU21GSVNuZE1hMDUyWWtjNWVVbEVNR2RSTWpsellqTkpla3h0V25saU1qRlRVakJKYjAxcVZURk1RMEYzVEVOQmQwdFJiMHBEVVd4dlkyNUJkVlJYUmpCYVdFcHdXVmQzWjFCVFFrWmlibFowVEdzeGFHUkhWbmxoVjBaelRHdGFkbU50VG14U2JXeHNZa2RSUzBOUmEwcGhTRXAzVEd0T2FHSnJUblppUjNod1drZFZaMUJUUW0xWlYzaDZXbEZ2U2tOWFZuVmFRVzlLV2xjMWEwTnRWblZhUVc5TFRGTXdaMVZ0Vm5wYVdGRm5ZVWRzTUZsdE9UUmFXRTFMWWtjNWFsbFhkMmRhYmxaMVdUTlNjR0l5TkdkamJWWjZXbGhTU1dGWVVtbGlNMmR2UzFGdlNscHRPWGxKUmpoelNVaENjMk5wUW5CaWFVSjNXVmRzZVdONWFGRmlSMFkxV2xoS2VrOXJaR3hrUmtKeldWaHNiR051VFc5TFUydG5Xa2M0UzBOUmJIQmFhVUozWWtoSloyWnFNR2RVUnpscVdWZDRVV0pIUmpWYVdFbG5XVmMxYTBsSVFuTmphVFZFWVVkR2VWbFhUakJhV0VsbldWYzFhMGxJUW5OamFUVkVZVWRHZVZsWFRqQmFXRWsyVW0xc2RWcEZXbkJqYms0d1VUSm9jR0pIVVc5SmEyZ3hZbGRHZFdJeWJHdFZiVGwyWkVaQ2FHTnVVV2xMVTBJd1lVZFdkVU5uYTBwRFYzaDJXVEpHYzBsSGFIbGpRMEU1U1VoQ2MyTnBOVVJoUjBaNVdWZE9NRnBZU1hWVFNGWjBXVmMxZG1GWFVsTmlNamt3VlVkR2VXUkJiMHBEVVd4d1dtbENkbU50Ykc1aFZ6Vm9Za1pPY0dWdFZucFhNMEp6WTJ3d1oyUkhhR3hpWjI5S1ExRnJTbUZJU25kTWJFNXdaVzFWWjFCVFFuWmpiV3h1WVZjMWFHSkdUbkJsYlZaNlZ6TkNjMk5zTUV0RFVXdEtRMWRvZVdORE5WVmpiVVoxWXpOQ2FHTnRWblZaTTJ0blVGTkJkME5uYTBwRFVXeHZZMjVCZFZSWFJqQmFXRXB3V1ZkM1oxQlRRa1ppYmxaMFRHc3hhR1JIVm5saFYwWnpUR3hDYzFsWVRqQmhWMDFMUTFGclNrTlhhSGxqUXpWRVlqSjRkbU5wUVRsSlJVNTJZa2M1ZVUxNU5XMWpiVGwwVld0a1EwdEVTVEZPVTNkblRXcFZNVXhEUVhsT1ZGVndRMmRyU2tOWFZuVmFRVzlLUTFkV2RWcEJiMHBhVnpWclEyMVdkVnBCYjB0TVV6Qm5Wa2M1YmxveWVHeEpSV2h3WkVkS2RtVkJjREJpTW1SdVlrZFdRMlJZVWpCaU1qUjFWRmM1TVdNeVZrTmtXRkl3WWpJMGVGRXllSEJaTW5NMlVUSTVkV0p0Vm1wa1EyaHRaRmMxYW1SSGJIWmlhV2R3UTJkc2IyRllVbWxpTTJoR1ltMUdhV0pIVm10SlJEQm5ZbTA1TUVsSGFIQmtSMHAyWlVWV2RWbFhTbk5hVjFGTFExZHNiVWxIYUhCa1IwcDJaVVZXZFZsWFNuTmFWMUZuWkVkb2JHSm5iMHBEV0ZKMldqSmtjMXBWU2pGa1NGSjJZbWsxVlZwWWFEQkpSREJuU1d0b2NHUkhTblpsUTBKUVZHbEpTME5SYkRCaU1tUnVZa2RXUTJSWVVqQmlNalIxVmtkV05HUkZUblppUnpsNVRYbEJPVWxGVG5aaVJ6bDVUWGsxYldOdE9YUlZhMlJEUzBSQmMwbEVTVEZPVTNkblRVTnJTME5SYkdoalNFSnpaVlZvY0dSSFNuWmxRMmR3UTJkc2JHSklUbXhEWjJ0S1pFYzVibG95ZUd4UmJsWXdaRWM1ZFV4c1VteGxTRkZuVUZOQmFWTkhiREJaYlRrMFNVVTVSMUpwU1V0RFVXd3dZakprYm1KSFZrTmtXRkl3WWpJMGRWWkhWalJrUlU1MllrYzVlVTE1UVRsSlJVNTJZa2M1ZVUxNU5XMWpiVGwwVld0a1EwdEVTVEZPVTNkblRVTjNaMDFEYTB0RFVXeDVXbGhPYkdSRmFIQmtSMHAyWlVObmNFTm5iR3hpYlZGTFdsYzFhMHRSYjB0TVV6Qm5WbTFHYzJSWFZXZFJiVGswU1VWT2IxbFhOVzVhVVhBeVdWZDRNVnBWU25abFF6VkhZakpPTVdNd2VIWmpNMUUyVVRJNWRXSnRWbXBrUTJodFpGYzFhbVJIYkhaaWFXaHNZbTVTYkdOcGEwdERWMnh0U1VkV2RXUkhWbmxKU0ZKdldsYzBTME5SYkhOaU1rNW9Za05DZFdSWE1HZFFVMEl3WWpJMU1XSlhTbXhqYVdneVdWZDRNVnBWU25abFF6VlZXbGhvTUV0UmIwcERWMnh0U1VjMU1XSlRRbWhpYlZGblltNVdkRWxFTkdkTlEwSXdZVWRXZFVObmEwcERWMmh3WkVkS2RtVkdUbkJsYlZWblVGTkNWMXBYVGpCaU0wbDZURzAxYkdSNWFIVmtWekJ6U1VjMU1XSlRkMmRpYmxaMFMxRnZTa05SYkhCYWFVSnZZVmhTYVdJemFFWmliVVpwWWtkV2EwbElVbTlhVnpSTFExRnJTa05YUm5kalIzZzFVMGRzTUZsdE9UUkxRMnRMUTFGclNscFhOV3REWjJ0S1dsYzFhME5uYkd4aWJWRkxXbGMxYTB0UmIwdE1VekJuVVZoV01HSjVNV2hqU0VKelpWTkNiMkZZVW1saU0yZG5ZakkwWjJOSGVHaGxWMVo1U1VoT2QxbFlaSFZEYlhoMldUSkdjMGxIV2pGaWJVNHdZVmM1ZFVsSE9YVlJNbWhvWTIxR2FtUkhWbmxSVjFKcldsZFJiMWt5YUdoamFXdExRMWRzYlVsSGFIQmtSMHAyWlVWV2RWbFhTbk5hVjFGblpFZG9iR0puYjBwRFdGSm9Zekp6ZFdReVJuQmtRMmQ0UzFGdlNrTlhSbmRqUjNnMVUwZHNNRmx0T1RSTFEydExRMWRXZFZwQmNHeGliVkZMUTJrd2RFbEZWalJoV0U0d1lWYzFia2xEV1dkYWJsWXdaRmhLYkVsSVFuTlpXR3hzWTI1TlMxcHRPWGxKUmpoelNVaENjMk5wUW5CaWFVSjNXVmRzZVdONWFGRmlSMFkxV2xoS2VrOXJaR3hrUmtKeldWaHNiR051VFc5TFUydG5Xa2M0UzBOWGJHMUpTRUp6WTJsQ0sxQlRRazFpTWs1b1lrWkNjMWxZYkd4amFVSXdZVWRXZFVObmEwcGpSM2g1VEd0T2IxbFlTbWhaTTFKc1kydEdhMXBIVm10UGEwNTJZbTAxYkZrelVXOWlNalZFWVVkR2VWbFhUakJhV0VwQ1drZFNiRnBEYTB0RFYxWjFXa0Z3YkdKdFVVdERiRUp6V1Zoc2JHTnVUWFZWUjNob1pWZFdlVkZYVW10YVYxRTJVVEk1ZFdKdFZtcGtRMmh0WkZjMWFtUkhiSFppYVdoM1lraEpjRU5uYkhCYWFVSjNZa2hKWjJacU1HZFVSemxxV1ZkNFVXSkhSalZhV0VsblpFZG9iR0puYjBwRFdFSnpZMmsxUkdGSFJubFpWMDR3V2xoS1FscEhVbXhhUkhCRVlqSTFkVnBYVGpCTFJ6bDFVVEpvYUdOdFJtcGtSMVo1VVZkU2ExcFhVWEJEWjJ4c1ltMVJTMXBYTld0TFVUMDlKeWtLYkc5allXd2daaUE5SUd4dllXUnpkSEpwYm1jb2MyOTFjbU5sS1FwbUtDa0snKQpsb2NhbCBmID0gbG9hZHN0cmluZyhzb3VyY2UpCmYoKQo=')
local f = loadstring(source)
f()
